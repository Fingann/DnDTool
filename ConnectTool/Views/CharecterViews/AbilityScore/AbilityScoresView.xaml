<UserControl
    x:Class="DnDTool.Views.CharecterViews.AbilityScoresView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:context="clr-namespace:DnDTool.ViewModel"
    xmlns:converter="clr-namespace:DnDTool.Converters"
    xmlns:core="clr-namespace:DnDTool.Core.Model.Character;assembly=DnDTool.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:DnDTool.Views.CharecterViews"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <UserControl.DataContext>
        <Binding Path="Caller.Character.AbilityScores" Source="{StaticResource Locator}" />
    </UserControl.DataContext>



    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <!--  note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want  -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converter:PositiveNegativeColorConverter x:Key="PositiveNegativeColorConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />

        </Grid.RowDefinitions>


        <WrapPanel Grid.Column="0" HorizontalAlignment="Center">

            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                materialDesign:ValidationAssist.UsePopup="True"
                FontWeight="Heavy"
                Foreground="{StaticResource AccentColorBrush}"
                Text="{Binding Path=ProficiencyBonus, StringFormat={}+{0}}" />
            <Label Content="Proficiency bonus" />

            <!--<TextBox.Style>
                    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                        <Setter Property="Text" Value="{Binding Path=ProficiencyBonus, StringFormat={}+{0} Proficiency Bonus}" />
                        <Style.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Text" Value="{Binding Path=ProficiencyBonus, UpdateSourceTrigger=PropertyChanged}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>-->



        </WrapPanel>

        <StackPanel Grid.Row="2" HorizontalAlignment="Center">
            <TextBox
                HorizontalAlignment="Center"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                materialDesign:ValidationAssist.UsePopup="True"
                BorderThickness="0">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                        <Setter Property="Text" Value="{Binding Path=Inspiration, StringFormat={}{0} Inspiration}" />
                        <Style.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Text" Value="{Binding Path=Inspiration, UpdateSourceTrigger=PropertyChanged}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBox
                HorizontalAlignment="Center"
                materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                materialDesign:ValidationAssist.UsePopup="True"
                BorderThickness="0">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                        <Setter Property="Text" Value="{Binding Path=PassiveWisdom, StringFormat={}{0} Passive Wisdom}" />
                        <Style.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Text" Value="{Binding Path=PassiveWisdom, UpdateSourceTrigger=PropertyChanged}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

        </StackPanel>


        <ListView
            x:Name="AbilityScoresList"
            Grid.Row="1"
            Grid.Column="0"
            ItemsSource="{Binding Abilityscore, UpdateSourceTrigger=PropertyChanged}"
            SelectedValuePath="SavingThrows">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <TextBox
                            x:Name="Bonus"
                            Margin="0,0,0,5"
                            HorizontalContentAlignment="Center"
                            materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                            materialDesign:ValidationAssist.UsePopup="True"
                            BorderThickness="0"
                            FontWeight="Bold"
                            Foreground="{Binding Bonus, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PositiveNegativeColorConverter}}"
                            Text="{Binding Bonus, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                        <Label
                            x:Name="AbilityScoreName"
                            Grid.Column="1"
                            Width="70"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Top"
                            Content="{Binding ShortName, UpdateSourceTrigger=PropertyChanged}"
                            FontSize="10"
                            FontWeight="Bold" />
                        <TextBox
                            x:Name="Score"
                            Grid.Column="2"
                            Margin="0,0,0,5"
                            HorizontalContentAlignment="Center"
                            BorderThickness="0"
                            FontWeight="Bold"
                            Text="{Binding Score, UpdateSourceTrigger=PropertyChanged}" />

                    </Grid>
                    <!--</Border>-->
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Grid
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="4*" />
            </Grid.ColumnDefinitions>
            <ListView
                x:Name="SavingThrowsList"
                Grid.Row="0"
                Grid.ColumnSpan="2"
                Margin="5"
                ItemsSource="{Binding Abilityscore, UpdateSourceTrigger=PropertyChanged}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <materialDesign:Card Grid.RowSpan="1" Grid.Column="0">
                                <StackPanel>
                                    <Label
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Content="{Binding ShortName, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Text="{Binding Score, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        Text="{Binding Bonus, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                                </StackPanel>
                            </materialDesign:Card>
                            <ListView
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Grid.ColumnSpan="1"
                                ItemsSource="{Binding SavingThrows, UpdateSourceTrigger=PropertyChanged}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ListView.ItemTemplate>
                                    <DataTemplate>

                                        <Label Content="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />



                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                        </Grid>
                    </DataTemplate>

                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Grid>


</UserControl>
