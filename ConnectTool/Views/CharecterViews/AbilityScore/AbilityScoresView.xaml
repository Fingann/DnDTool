<UserControl
    x:Class="DnDTool.Views.CharecterViews.AbilityScoresView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:DnDTool.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:DnDTool.Views.CharecterViews"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DataContext="{StaticResource AbilityScores}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--  note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want  -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converter:PositiveNegativeColorConverter x:Key="PositiveNegativeColorConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth1">
        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />

            </Grid.RowDefinitions>


            <WrapPanel
                Grid.Column="0"
                Margin="0,0,0,0"
                HorizontalAlignment="Center">
                <TextBox
                    HorizontalAlignment="Center"
                    materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                    materialDesign:ValidationAssist.UsePopup="True"
                    BorderThickness="0">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                            <Setter Property="Text" Value="{Binding Path=ProficiencyBonus, StringFormat={}+{0} Proficiency Bonus}" />
                            <Style.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Text" Value="{Binding Path=ProficiencyBonus, UpdateSourceTrigger=PropertyChanged}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>


            </WrapPanel>

            <StackPanel Grid.Row="2" HorizontalAlignment="Center">
                <TextBox
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                    materialDesign:ValidationAssist.UsePopup="True"
                    BorderThickness="0">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                            <Setter Property="Text" Value="{Binding Path=Inspiration, StringFormat={}{0} Inspiration}" />
                            <Style.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Text" Value="{Binding Path=Inspiration, UpdateSourceTrigger=PropertyChanged}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <TextBox
                    HorizontalAlignment="Center"
                    materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                    materialDesign:ValidationAssist.UsePopup="True"
                    BorderThickness="0">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                            <Setter Property="Text" Value="{Binding Path=PassiveWisdom, StringFormat={}{0} Passive Wisdom}" />
                            <Style.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Text" Value="{Binding Path=PassiveWisdom, UpdateSourceTrigger=PropertyChanged}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

            </StackPanel>


            <ListView
                Grid.Row="1"
                Grid.RowSpan="1"
                ItemsSource="{Binding Abilityscore}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <!--<Border  BorderThickness="0,1,0,0" BorderBrush="Black" >-->

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <TextBox
                                x:Name="Score"
                                Margin="0,0,0,5"
                                HorizontalContentAlignment="Right"
                                materialDesign:ValidationAssist.UsePopup="True"
                                BorderThickness="0"
                                FontWeight="Bold"
                                Foreground="{Binding Bonus, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PositiveNegativeColorConverter}}"
                                Text="{Binding Bonus, UpdateSourceTrigger=PropertyChanged}" />
                            <Label
                                x:Name="AbilityScoreName"
                                Grid.Column="1"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Top"
                                Content="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                FontSize="10"
                                FontWeight="Bold" />
                            <TextBox
                                x:Name="Bonus"
                                Grid.Column="2"
                                Margin="0,0,0,5"
                                BorderThickness="0"
                                FontWeight="Bold"
                                Text="{Binding Score, UpdateSourceTrigger=PropertyChanged}" />

                        </Grid>
                        <!--</Border>-->
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </materialDesign:Card>
</UserControl>
